---
title: "MEGAHAND"
author: "Joe"
date: "11/8/2018"
output:
  pdf_document: 
    fig_caption: yes
    keep_tex: yes
  word_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Interoperability

```{r}
# install.packages("tidyverse")
library(tidyverse)


# install.packages("reticulate", dependencies = TRUE)
library(reticulate)
```

With the reticulate package in R, Python code can be integrated into R documents and used alongside R. This is especially convenient in the RMarkdown document format for several reasons:

* R code and Python code can be called in discrete boxes, but within the same document

* Objects built in either environment can be passed back and forth between languages

* RMarkdown offers flexible export formats including pdf, slides, word, and html

This particular aspect of our project interested me due to the scale and diversity of challenges in interoperability.

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
```



# Exploratory Data Analysis and Visualization

This is a Python script that grabs all of the ".csv" files in a folder, and makes a list of the names. The script is saved as "TrainingDataGrabber.py"
```{python, eval = FALSE}
import os
import glob

path = 'c:\\'
extension = 'csv'
os.chdir(path= "C:/Users/joeje/Desktop/Academics/FAES/Intro_to_Python/MEGAHAND/TrainingData")
Training_Data_Files = [i for i in glob.glob('*.{}'.format(extension))]
print(Training_Data_Files)
```


Here, I used R to source the Python script, create a list object containing all of the file names in the "TrainingData" folder, and then coerced an R DataFrame from that list for display.

```{r, warning = FALSE}
reticulate::source_python("TrainingDataGrabber.py")

Training_Data_Files

as.data.frame(Training_Data_Files)
```


Next, I used the purrr package from R to apply a function I made in R that tidys the data (removing extraneous columns and formatting) and then creates a pre-set visualization for all of the files from the list (that was made in Python.)

```{r}
source("C:/Users/joeje/Desktop/Academics/FAES/Intro_to_Python/MEGAHAND/Megamunge_Jitter.R")
library(purrr)
setwd('TrainingData')
map(Training_Data_Files, Megamunge)
```


# Machine Learning

```{r, eval = FALSE}
install.packages("tensorflow", dependencies = TRUE)
install.packages("keras", dependencies = TRUE)
library(tensorflow)
library(keras)
```














